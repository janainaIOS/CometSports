//
//  FanZoneDetailVC.swift
//  Comet Sports
//
//  Created by iosDev on 26/02/2024.
//

import UIKit

class FanZoneDetailVC: UIViewController {

    @IBOutlet weak var imageIV: UIImageView!
    @IBOutlet weak var nameLBL: UILabel!
    @IBOutlet weak var postCountLBL: UILabel!
    @IBOutlet weak var detailLBL: UILabel!
    @IBOutlet weak var joinBTN: UIButton!
    @IBOutlet weak var listCV: UICollectionView!
    @IBOutlet weak var postBTN: UIButton!
    @IBOutlet weak var listCVHeightConstraint: NSLayoutConstraint!
    @IBOutlet weak var topViewHeightConstraint: NSLayoutConstraint!
    
    var activityIndicator: ActivityIndicatorHelper!
    var forumModel = Forum()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configure()
    }

    override func viewWillAppear(_ animated: Bool) {
        configureView()
    }
    
    func configure() {
        activityIndicator = ActivityIndicatorHelper(view: self.view)
        nibInitialization()
    }
    
    func configureView() {
        postBTN.setTitle("New Post".localized, for: .normal)
        joinBTN.setTitle("Join Fanzone".localized, for: .normal)
        getForumDetail()
    }
    
    func nibInitialization() {
        let nib = UINib(nibName: "PostCollectionCell", bundle: nil)
        listCV.register(nib, forCellWithReuseIdentifier: "PostCollectionCell")
    }
    
    func getPostList() {
        activityIndicator.startAnimaton()
        ForumViewModel.shared.getPosts(forumId: forumModel.forumUniqueID ) { posts, status, errorMsg in
            self.activityIndicator.stopAnimaton()
            self.forumModel.postList = posts
            self.listCV.reloadData()
        }
    }
    
    func getForumDetail() {
        activityIndicator.startAnimaton()
        ForumViewModel.shared.forumDetail(id: forumModel.forumUniqueID) { forum, status, message in
            self.forumModel = forum
            self.setForumValue()
        }
    }
    
    func setForumValue() {
        imageIV.setImage(imageStr: forumModel.coverImageURL, placeholder: Images.fanZOne)
        nameLBL.text = forumModel.title
        detailLBL.text = forumModel.body
       
        
        joinBTN.isHidden = (forumModel.hasJoined ) == true
        postBTN.isHidden = !(forumModel.hasJoined )
        //topView height
        
        let titleHeight = forumModel.title.heightOfString2(width: screenWidth - 70, font: appFontMedium(14))
        let bodyHeight = forumModel.body.heightOfString2(width: screenWidth - 70, font: appFontMedium(14))
        topViewHeightConstraint.constant = titleHeight + bodyHeight + 270
        
        getPostList()
    }
    func deletePost(_index: Int) {
        showAlert2(title: "", message: ErrorMessage.deleteAlert) {
            self.activityIndicator.startAnimaton()
            let model = self.forumModel.postList[_index]
            ForumViewModel.shared.deletePost(id: model.id ?? 0 ) { status, errorMsg in
                self.activityIndicator.stopAnimaton()
                if status {
                    self.forumModel.postList.remove(at: _index)
                } else {
                    Toast.show(message: errorMsg, view: self.view)
                }
                self.listCV.reloadData()
            }
        }
    }
    
    func blockUser(userId: Int) {
        let param: [String: Any] = [
            "blocked_user_id": userId,
            "flag": "true",
            "reason": "autogenerated reason"
        ]
        
        self.activityIndicator.startAnimaton()
        ForumViewModel.shared.blockUserOrPost(type: .user, parameters: param) { status, errorMsg in
            self.activityIndicator.stopAnimaton()
            if status{
                self.getPostList()
            } else {
                Toast.show(message: errorMsg, view: self.view)
            }
        }
    }
    
    // MARK: - Button Actions
    
    @objc func moreBTNTapped(sender: UIButton) {
        let alert = UIAlertController(title: nil, message: nil, preferredStyle: .actionSheet)
        if let user = UserDefaults.standard.user, user.id == forumModel.postList[sender.tag].user?.id {// app user
            let action1 = UIAlertAction(title: "Edit Post".localized, style: .default , handler:{ (UIAlertAction) in
                let nextVC = Storyboards.home.instantiateViewController(withIdentifier: "CreatePostVC") as! CreatePostVC
                nextVC.postModel = self.forumModel.postList[sender.tag]
                nextVC.forumUniqId = self.forumModel.postList[sender.tag].forumUniqueID ?? ""
                nextVC.isForEdit = true
                self.navigationController?.pushViewController(nextVC, animated: true)
            })
            alert.addAction(action1)
            let action2 = UIAlertAction(title: "Delete Post".localized, style: .default , handler:{ (UIAlertAction) in
                self.deletePost(_index: sender.tag)
            })
            alert.addAction(action2)
        } else {
            let action1 = UIAlertAction(title: "Block User".localized, style: .default , handler:{ (UIAlertAction) in
                self.showAlert2(title: "", message: "You are about to block this user. You will no longer see their content and the user will no longer be able to see your content. Would you like to block this user?") {
                    self.blockUser(userId: self.forumModel.postList[sender.tag].user?.id ?? 0)
                }
            })
            alert.addAction(action1)
            let action2 = UIAlertAction(title: "Report Post".localized, style: .default , handler:{ (UIAlertAction) in
                self.showAlert2(title: "", message: "You are about to report this post as malicious or abusive. Would you like to report this post to PitchStories?") {
                    let nextVC = Storyboards.home.instantiateViewController(withIdentifier: "ReportVC") as! ReportVC
                    nextVC.contentId = self.forumModel.postList[sender.tag].id ?? 0
                    self.navigationController?.pushViewController(nextVC, animated: true)
                }
            })
            alert.addAction(action2)
        }
        alert.addAction(UIAlertAction(title: "Cancel".localized, style: .cancel , handler:{ (UIAlertAction)in
            
        }))
        self.present(alert, animated: true, completion: {
           
        })
    }
    
    @IBAction func joinBTNTapped(_ sender: UIButton) {
        if let user = UserDefaults.standard.user {
            activityIndicator.startAnimaton()
            ForumViewModel.shared.joinOrLeaveForum(forumId: forumModel.forumUniqueID , join: true) { status, errorMsg in
                self.activityIndicator.stopAnimaton()
                if status {
                    self.joinBTN.isHidden = true
                    self.postBTN.isHidden = false
                } else {
                    Toast.show(message: errorMsg, view: self.view)
                }
            }
        } else {
            self.showAlert2(title: "Login / Sign Up".localized, message: ErrorMessage.loginAlert) {
                /// Show login page to login/register new user
                self.presentViewController(LoginVC.self, storyboard: Storyboards.login) { vc in
                    vc.delegate = self
                }
            }
        }
    }
    
    @IBAction func postBTNTapped(_ sender: UIButton) {
        if let user = UserDefaults.standard.user {
            let nextVC = Storyboards.home.instantiateViewController(withIdentifier: "CreatePostVC") as! CreatePostVC
            nextVC.forumUniqId = forumModel.forumUniqueID 
            self.navigationController?.pushViewController(nextVC, animated: true)
        } else {
            self.showAlert2(title: "Login / Sign Up".localized, message: ErrorMessage.loginAlert) {
                /// Show login page to login/register new user
                self.presentViewController(LoginVC.self, storyboard: Storyboards.login) { vc in
                    vc.delegate = self
                }
            }
        }
    }
}

// MARK: - CollectionView Delegates
extension FanZoneDetailVC: UICollectionViewDataSource {
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        postCountLBL.attributedText = NSMutableAttributedString().semiBold("\(forumModel.postList.count)", size: 16).regular("  " + (forumModel.postList.count < 2 ? "Post".localized : "Posts".localized), size: 13)
        let collectionHeight = ForumViewModel.shared.calculateTotalCVHeight(posts: forumModel.postList ) + 100
        listCVHeightConstraint.constant = collectionHeight < 300 ? 300 : collectionHeight
        if forumModel.postList.count == 0 {
            self.listCV.setEmptyMessage(ErrorMessage.dataEmptyAlert)
        } else {
            self.listCV.restore()
        }
        return forumModel.postList.count 
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "PostCollectionCell", for: indexPath) as! PostCollectionCell
        cell.configure(model: forumModel.postList[indexPath.row], _index: indexPath.row)
        cell.moreBTN.addTarget(self, action: #selector(moreBTNTapped(sender:)), for: .touchUpInside)
        return cell
    }
}

extension FanZoneDetailVC: UICollectionViewDelegate {
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        
    }
}

extension FanZoneDetailVC: UICollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        if ((forumModel.postList.indices.contains(indexPath.row)) != nil) {
            return CGSize(width: collectionView.frame.width, height: ForumViewModel.shared.calculatePostHeight(post: forumModel.postList[indexPath.row]))
        } else {
            return CGSize(width: collectionView.frame.width, height: 230)
        }
    }
}

// MARK: - Custom Delegate
extension FanZoneDetailVC: LoginVCDelegate {
    func viewControllerDismissed() {
        
    }
}

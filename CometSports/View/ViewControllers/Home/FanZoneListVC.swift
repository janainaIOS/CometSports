//
//  FanZoneListVC.swift
//  Comet Sports
//
//  Created by iosDev on 21/02/2024.
//

import UIKit

class FanZoneListVC: UIViewController {
    
    @IBOutlet weak var headerLBL: UILabel!
    @IBOutlet weak var feedBTN: UIButton!
    @IBOutlet weak var zoneBTN: UIButton!
    @IBOutlet weak var listCV: UICollectionView!
    @IBOutlet weak var exploreBTN: UIButton!
    @IBOutlet weak var myZoneBTN: UIButton!
    @IBOutlet weak var zoneTopView: UIView!
    
    var activityIndicator: ActivityIndicatorHelper!
    var forumArray: [Forum] = []
    var joinedForumArray: [JoinedForum] = []
    var feedArray: [Post] = []
    var showFeeds = true
    var showMyZone = false
    
    override func viewDidLoad() {
        super.viewDidLoad()
        nibInitialization()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        configure()
    }
    
    func configure() {
        activityIndicator = ActivityIndicatorHelper(view: self.view)
        zoneTopView.isHidden = showFeeds
        headerLBL.text = "FanZones".localized
        feedBTN.setTitle("Feed".localized, for: .normal)
        zoneBTN.setTitle("Zones".localized, for: .normal)
        exploreBTN.setTitle("Explore".localized, for: .normal)
        myZoneBTN.setTitle("My Zones".localized, for: .normal)
        feedBTN.backgroundColor = showFeeds ? .baseColor : .gray1
        zoneBTN.backgroundColor = showFeeds ? .gray1 : .baseColor
        exploreBTN.borderColor = showMyZone ? .clear : .baseColor
        myZoneBTN.borderColor = showMyZone ? .baseColor : .clear
        getFeedList()
    }
    
    func nibInitialization() {
        let nib = UINib(nibName: "PostCollectionCell", bundle: nil)
        listCV.register(nib, forCellWithReuseIdentifier: "PostCollectionCell")
    }
    
    func getFeedList() {
        self.feedArray.removeAll()
        self.listCV.reloadData()
        activityIndicator.startAnimaton()
        ForumViewModel.shared.getJoinedForumPost { posts, status, errorMsg in
            self.activityIndicator.stopAnimaton()
           
            if status {
                self.feedArray = posts
            } else {
                Toast.show(message: errorMsg, view: self.view)
            }
            self.listCV.reloadData()
        }
    }
    
    func getForumList() {
        activityIndicator.startAnimaton()
        if showMyZone {
            self.joinedForumArray.removeAll()
            self.listCV.reloadData()
            ForumViewModel.shared.getJoinedForums { joinedForums, status, errorMsg in
                self.activityIndicator.stopAnimaton()
                
                if status {
                    self.joinedForumArray = joinedForums
                } else {
                    Toast.show(message: errorMsg, view: self.view)
                }
                self.listCV.reloadData()
            }
        } else {
            self.forumArray.removeAll()
            self.listCV.reloadData()
            ForumViewModel.shared.getForums { forums, status, errorMsg in
                self.activityIndicator.stopAnimaton()
               
                if status {
                    self.forumArray = forums
                } else {
                    Toast.show(message: errorMsg, view: self.view)
                }
                self.listCV.reloadData()
            }
        }
    }
    
    func deletePost(_index: Int) {
        showAlert2(title: "", message: ErrorMessage.deleteAlert) {
            self.activityIndicator.startAnimaton()
            let model = self.feedArray[_index]
            ForumViewModel.shared.deletePost(id: model.id ?? 0) { status, errorMsg in
                self.activityIndicator.stopAnimaton()
                if status {
                    self.feedArray.remove(at: _index)
                } else {
                    Toast.show(message: errorMsg, view: self.view)
                }
                self.listCV.reloadData()
            }
        }
    }
    
    func blockUser(userId: Int) {
        let param: [String: Any] = [
            "blocked_user_id": userId,
            "flag": "true",
            "reason": "autogenerated reason"
        ]
        
        self.activityIndicator.startAnimaton()
        ForumViewModel.shared.blockUserOrPost(type: .user, parameters: param) { status, errorMsg in
            self.activityIndicator.stopAnimaton()
            if status{
                self.getFeedList()
            } else {
                Toast.show(message: errorMsg, view: self.view)
            }
        }
    }
    
    // MARK: - Button Actions
    
    @IBAction func feedOrFanTapped(_ sender: UIButton) {
        showFeeds = sender.tag == 1
        zoneTopView.isHidden = showFeeds
        feedBTN.backgroundColor = showFeeds ? .baseColor : .gray1
        zoneBTN.backgroundColor = showFeeds ? .gray1 : .baseColor
        if showFeeds {
            getFeedList()
        } else {
            getForumList()
        }
    }
    
    @IBAction func exploreOrZoneTapped(_ sender: UIButton) {
        showMyZone = sender.tag == 2
        exploreBTN.borderColor = showMyZone ? .clear : .baseColor
        myZoneBTN.borderColor = showMyZone ? .baseColor : .clear
        getForumList()
    }
    
    @objc func moreBTNTapped(sender: UIButton) {
        let alert = UIAlertController(title: nil, message: nil, preferredStyle: .actionSheet)
        if let user = UserDefaults.standard.user, user.id == feedArray[sender.tag].user?.id {// app user
            let action1 = UIAlertAction(title: "Edit Post".localized, style: .default , handler:{ (UIAlertAction) in
                let nextVC = Storyboards.home.instantiateViewController(withIdentifier: "CreatePostVC") as! CreatePostVC
                nextVC.postModel = self.feedArray[sender.tag]
                nextVC.forumUniqId = self.feedArray[sender.tag].forumUniqueID ?? ""
                nextVC.isForEdit = true
                self.navigationController?.pushViewController(nextVC, animated: true)
            })
            alert.addAction(action1)
            let action2 = UIAlertAction(title: "Delete Post".localized, style: .default , handler:{ (UIAlertAction) in
                self.deletePost(_index: sender.tag)
            })
            alert.addAction(action2)
        } else {
            let action1 = UIAlertAction(title: "Block User".localized, style: .default , handler:{ (UIAlertAction) in
                self.showAlert2(title: "", message: "You are about to block this user. You will no longer see their content and the user will no longer be able to see your content. Would you like to block this user?") {
                    self.blockUser(userId: self.feedArray[sender.tag].user?.id ?? 0)
                }
            })
            alert.addAction(action1)
            let action2 = UIAlertAction(title: "Report Post".localized, style: .default , handler:{ (UIAlertAction) in
                self.showAlert2(title: "", message: "You are about to report this post as malicious or abusive. Would you like to report this post to PitchStories?") {
                    let nextVC = Storyboards.home.instantiateViewController(withIdentifier: "ReportVC") as! ReportVC
                    nextVC.contentId = self.feedArray[sender.tag].id ?? 0
                    self.navigationController?.pushViewController(nextVC, animated: true)
                }
            })
            alert.addAction(action2)
        }
        alert.addAction(UIAlertAction(title: "Cancel".localized, style: .cancel , handler:{ (UIAlertAction)in
            
        }))
        self.present(alert, animated: true, completion: {
           
        })
    }
    
    @objc func forumBTNTapped(sender: UIButton) {
        let nextVC = Storyboards.home.instantiateViewController(withIdentifier: "FanZoneDetailVC") as! FanZoneDetailVC
        nextVC.forumModel.forumUniqueID = feedArray[sender.tag].forumUniqueID ?? ""
       self.navigationController?.pushViewController(nextVC, animated: true)
    }
    
    @objc func joinBTNTapped(sender: UIButton) {
        let forumUniqId = showMyZone ? joinedForumArray[sender.tag].forum.forumUniqueID : forumArray[sender.tag].forumUniqueID
        activityIndicator.startAnimaton()
        ForumViewModel.shared.joinOrLeaveForum(forumId: forumUniqId, join: !showMyZone) { status, errorMsg in
            self.activityIndicator.stopAnimaton()
            if status {
                self.getForumList()
            } else {
                Toast.show(message: errorMsg, view: self.view)
            }
        }
    }
}

// MARK: - CollectionView Delegates
extension FanZoneListVC: UICollectionViewDataSource {
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        let dataArrayCount = showFeeds ? feedArray.count : (showMyZone ? joinedForumArray.count : forumArray.count)
        if dataArrayCount == 0 {
            self.listCV.setEmptyMessage(ErrorMessage.dataEmptyAlert)
        } else {
            self.listCV.restore()
        }
        return dataArrayCount
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        if showFeeds {
            let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "PostCollectionCell", for: indexPath) as! PostCollectionCell
            cell.moreBTN.addTarget(self, action: #selector(moreBTNTapped(sender:)), for: .touchUpInside)
            cell.forumBTN.addTarget(self, action: #selector(forumBTNTapped(sender:)), for: .touchUpInside)
            cell.configure(model: feedArray[indexPath.row], _index: indexPath.row)
            return cell
        } else {
            let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "FanzCollectionCell", for: indexPath) as! FanzCollectionCell
            cell.configure(model: showMyZone ? joinedForumArray[indexPath.row].forum : forumArray[indexPath.row], _index: indexPath.row)
            cell.joinBTN.addTarget(self, action: #selector(joinBTNTapped(sender:)), for: .touchUpInside)
            return cell
        }
    }
}

extension FanZoneListVC: UICollectionViewDelegate {
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        if showFeeds {
            
        } else {
            let nextVC = Storyboards.home.instantiateViewController(withIdentifier: "FanZoneDetailVC") as! FanZoneDetailVC
            nextVC.forumModel.forumUniqueID = showMyZone ? joinedForumArray[indexPath.row].forum.forumUniqueID : forumArray[indexPath.row].forumUniqueID
            self.navigationController?.pushViewController(nextVC, animated: true)
        }
    }
}

extension FanZoneListVC: UICollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        if showFeeds {
            if feedArray.indices.contains(indexPath.row) {
                return CGSize(width: collectionView.frame.width, height: ForumViewModel.shared.calculatePostHeight(post: feedArray[indexPath.row]))
            } else {
                return CGSize(width: collectionView.frame.width, height: 230)
            }
        } else {
            return CGSize(width: collectionView.frame.width, height: 110)
        }
    }
}
